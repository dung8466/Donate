// Generated by view binder compiler. Do not edit!
package ie.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ie.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReportBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ListView reportList;

  @NonNull
  public final SwipeRefreshLayout reportSwipeRefreshLayout;

  @NonNull
  public final TextView reportTitle;

  @NonNull
  public final TextView rowAmount;

  @NonNull
  public final TextView rowMethod;

  @NonNull
  public final TextView rowUpvotes;

  private ActivityReportBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout linearLayout, @NonNull ListView reportList,
      @NonNull SwipeRefreshLayout reportSwipeRefreshLayout, @NonNull TextView reportTitle,
      @NonNull TextView rowAmount, @NonNull TextView rowMethod, @NonNull TextView rowUpvotes) {
    this.rootView = rootView;
    this.linearLayout = linearLayout;
    this.reportList = reportList;
    this.reportSwipeRefreshLayout = reportSwipeRefreshLayout;
    this.reportTitle = reportTitle;
    this.rowAmount = rowAmount;
    this.rowMethod = rowMethod;
    this.rowUpvotes = rowUpvotes;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_report, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.reportList;
      ListView reportList = ViewBindings.findChildViewById(rootView, id);
      if (reportList == null) {
        break missingId;
      }

      id = R.id.report_swipe_refresh_layout;
      SwipeRefreshLayout reportSwipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (reportSwipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.reportTitle;
      TextView reportTitle = ViewBindings.findChildViewById(rootView, id);
      if (reportTitle == null) {
        break missingId;
      }

      id = R.id.row_amount;
      TextView rowAmount = ViewBindings.findChildViewById(rootView, id);
      if (rowAmount == null) {
        break missingId;
      }

      id = R.id.row_method;
      TextView rowMethod = ViewBindings.findChildViewById(rootView, id);
      if (rowMethod == null) {
        break missingId;
      }

      id = R.id.row_upvotes;
      TextView rowUpvotes = ViewBindings.findChildViewById(rootView, id);
      if (rowUpvotes == null) {
        break missingId;
      }

      return new ActivityReportBinding((RelativeLayout) rootView, linearLayout, reportList,
          reportSwipeRefreshLayout, reportTitle, rowAmount, rowMethod, rowUpvotes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
