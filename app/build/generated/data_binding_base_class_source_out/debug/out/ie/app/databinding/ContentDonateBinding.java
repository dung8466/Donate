// Generated by view binder compiler. Do not edit!
package ie.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.NumberPicker;
import android.widget.ProgressBar;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ie.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentDonateBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RadioButton Direct;

  @NonNull
  public final RadioButton PayPal;

  @NonNull
  public final TextView amount;

  @NonNull
  public final NumberPicker amountPicker;

  @NonNull
  public final Button donateButton;

  @NonNull
  public final TextView donateSubtitle;

  @NonNull
  public final TextView donateTitle;

  @NonNull
  public final EditText paymentAmount;

  @NonNull
  public final RadioGroup paymentMethod;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView totalSoFar;

  private ContentDonateBinding(@NonNull RelativeLayout rootView, @NonNull RadioButton Direct,
      @NonNull RadioButton PayPal, @NonNull TextView amount, @NonNull NumberPicker amountPicker,
      @NonNull Button donateButton, @NonNull TextView donateSubtitle, @NonNull TextView donateTitle,
      @NonNull EditText paymentAmount, @NonNull RadioGroup paymentMethod,
      @NonNull ProgressBar progressBar, @NonNull TextView textView, @NonNull TextView totalSoFar) {
    this.rootView = rootView;
    this.Direct = Direct;
    this.PayPal = PayPal;
    this.amount = amount;
    this.amountPicker = amountPicker;
    this.donateButton = donateButton;
    this.donateSubtitle = donateSubtitle;
    this.donateTitle = donateTitle;
    this.paymentAmount = paymentAmount;
    this.paymentMethod = paymentMethod;
    this.progressBar = progressBar;
    this.textView = textView;
    this.totalSoFar = totalSoFar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentDonateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentDonateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_donate, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentDonateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Direct;
      RadioButton Direct = ViewBindings.findChildViewById(rootView, id);
      if (Direct == null) {
        break missingId;
      }

      id = R.id.PayPal;
      RadioButton PayPal = ViewBindings.findChildViewById(rootView, id);
      if (PayPal == null) {
        break missingId;
      }

      id = R.id.amount;
      TextView amount = ViewBindings.findChildViewById(rootView, id);
      if (amount == null) {
        break missingId;
      }

      id = R.id.amountPicker;
      NumberPicker amountPicker = ViewBindings.findChildViewById(rootView, id);
      if (amountPicker == null) {
        break missingId;
      }

      id = R.id.donateButton;
      Button donateButton = ViewBindings.findChildViewById(rootView, id);
      if (donateButton == null) {
        break missingId;
      }

      id = R.id.donateSubtitle;
      TextView donateSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (donateSubtitle == null) {
        break missingId;
      }

      id = R.id.donateTitle;
      TextView donateTitle = ViewBindings.findChildViewById(rootView, id);
      if (donateTitle == null) {
        break missingId;
      }

      id = R.id.paymentAmount;
      EditText paymentAmount = ViewBindings.findChildViewById(rootView, id);
      if (paymentAmount == null) {
        break missingId;
      }

      id = R.id.paymentMethod;
      RadioGroup paymentMethod = ViewBindings.findChildViewById(rootView, id);
      if (paymentMethod == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.totalSoFar;
      TextView totalSoFar = ViewBindings.findChildViewById(rootView, id);
      if (totalSoFar == null) {
        break missingId;
      }

      return new ContentDonateBinding((RelativeLayout) rootView, Direct, PayPal, amount,
          amountPicker, donateButton, donateSubtitle, donateTitle, paymentAmount, paymentMethod,
          progressBar, textView, totalSoFar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
